import io

import telebot
from telebot import types
import time

from config import TOKEN

bot = telebot.TeleBot(TOKEN)

rules = types.InlineKeyboardMarkup()
rule = types.InlineKeyboardButton('–ü—Ä–∞–≤–∏–ª–∞‚ùï', callback_data='rules')
rules.add(rule)

submit_rules = types.InlineKeyboardMarkup()
submit = types.InlineKeyboardButton('–ü—Ä–∏–Ω—è—Ç—å', callback_data='submited')
submit_rules.add(submit)

markup_send = types.InlineKeyboardMarkup()
submit = types.InlineKeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å', callback_data='send')
markup_send.add(submit)

markup_choice = types.InlineKeyboardMarkup()
submit = types.InlineKeyboardButton('‚úÖ', callback_data='submit')
reject = types.InlineKeyboardButton('üö´', callback_data='reject')
ban = types.InlineKeyboardButton('üêπ‚ùå', callback_data='ban')
markup_choice.add(submit, reject)
markup_choice.add(ban)

markup_chat = types.InlineKeyboardMarkup()
chat = types.InlineKeyboardButton('‚ö°–ß–∞—Ç', url='https://t.me/joinchat/iXE6jISxRFg2OGQy')
channel = types.InlineKeyboardButton('üí∏–í—ã–ø–ª–∞—Ç—ã', url='https://t.me/joinchat/ZJWZj5mCEog4NmQy')
markup_chat.add(chat, channel)

markup_to_main = types.InlineKeyboardMarkup()
mark_to_main = types.InlineKeyboardButton('–ú–∞—Ç–µ—Ä–∏–∞–ª—ãüì©üìö', callback_data='markup_to_main')
markup_to_main.add(mark_to_main)

markup_main = types.InlineKeyboardMarkup()
info = types.InlineKeyboardButton('üëÅ–ò–Ω—Ñ–æ', callback_data='info')
manuals = types.InlineKeyboardButton('üéì–ú–∞–Ω—É–∞–ª—ã', callback_data='manuals')
playground = types.InlineKeyboardButton('üõ†–ü–ª–æ—â–∞–¥–∫–∏', callback_data='playground')
markup_main.add(info)
markup_main.add(manuals)
markup_main.add(playground)

manual_markup = types.InlineKeyboardMarkup()
first = types.InlineKeyboardButton('üìö–†–∞–±–æ—Ç–∞ —Å PayPal | Vinted',
                                   url='https://telegra.ph/%F0%9D%90%8F%F0%9D%90%9A%F0%9D%90%B2%F0%9D%90%8F%F0%9D%90%9A%F0%9D%90%A5-%F0%9D%90%84%F0%9D%90%A6%F0%9D%90%A9%F0%9D%90%A2%F0%9D%90%AB%F0%9D%90%9E--Manual-10-07-01')
second = types.InlineKeyboardButton('üìö–¢—Ä–µ–∫-–∫–æ–¥ DNL',
                                    url='https://telegra.ph/%F0%9D%90%8F%F0%9D%90%9A%F0%9D%90%B2%F0%9D%90%8F%F0%9D%90%9A%F0%9D%90%A5-%F0%9D%90%84%F0%9D%90%A6%F0%9D%90%A9%F0%9D%90%A2%F0%9D%90%AB%F0%9D%90%9ETrek-kod-DNL-07-03')
third = types.InlineKeyboardButton('–û–±—Ä–∞—Ç–Ω–æ', callback_data='return')
manual_markup.add(first)
manual_markup.add(second)
manual_markup.add(third)

return_markup = types.InlineKeyboardMarkup()
vinted = types.InlineKeyboardButton('Vinted.com|üëó–æ–¥–µ–∂–¥–∞', url='https://www.vinted.com/')
quoka = types.InlineKeyboardButton('Quoka.de|üß¢–ª—é–±–æ–π —Å—Ç–∞—Ñ—Ñ', url='https://www.quoka.de/')
finn = types.InlineKeyboardButton('Finn.no|üëü–ª—é–±–æ–π —Å—Ç–∞—Ñ—Ñ', url='https://www.finn.no/-')
return1 = types.InlineKeyboardButton('–û–±—Ä–∞—Ç–Ω–æ', callback_data='return')
return_markup.add(vinted)
return_markup.add(quoka)
return_markup.add(finn)
return_markup.add(return1)

delete_questions = types.InlineKeyboardMarkup()
delete = types.InlineKeyboardButton('–£–±—Ä–∞—Ç—åüîö', callback_data='delete_question')
delete_questions.add(delete)

return_mark = types.InlineKeyboardMarkup()
ret = types.InlineKeyboardButton('–û–±—Ä–∞—Ç–Ω–æ', callback_data='return')
return_mark.add(ret)

proekt = """
‚ô†Ô∏è–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤‚ô†Ô∏è
      ‚ö°ùêèùêöùê≤ùêèùêöùê• ùêÑùê¶ùê©ùê¢ùê´ùêû‚ö°
  –¢–æ–≤–∞—Ä–∫–∞ 1.0 –±–µ–∑ —Ä–∏—Å–∫–∞
    –∏ –Ω–æ–º–µ—Ä–æ–≤ WhatsUp
    """
anketa = """
_‚ùï –ï—Å–ª–∏ —É–≤–µ—Ä–µ–Ω —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ–ø–∞—Å—Ç—å
–∫ –Ω–∞–º - –∑–∞–ø–æ–ª–Ω–∏ –∞–Ω–∫–µ—Ç—É –∏ –æ–∂–∏–¥–∞–π
—Ä–µ—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏, –Ω–æ —Å–ø–µ—Ä–≤–∞
–æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏._
    """
Rules = """
*‚ô†Ô∏è–í–æ—Ä–∫–µ—Ä–∞–º –∑–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è:‚ô†Ô∏è*   
‚Ä¢ –†–µ–∫–ª–∞–º–∞, —Ñ–ª—É–¥, —Å–ø–∞–º, 18+ –∫–æ–Ω—Ç–µ–Ω—Ç.
‚Ä¢ –í–≤–æ–¥–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ –≤ –∑–∞–±–ª—É–∂–¥–µ–Ω–∏–µ.
‚Ä¢ –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Å–≤–æ–∏ —É—Å–ª—É–≥–∏, –±–µ–∑ –æ–¥–æ–±—Ä–µ–Ω–∏—è –¢–°–∞.
‚Ä¢ –°–ø–æ—Ä–∏—Ç—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ø—Ä–æ–µ–∫—Ç–∞.
‚Ä¢ –†–∞—Å–∫—Ä—ã–≤–∞—Ç—å —Å–µ–±—è –ø–æ—Å–ª–µ –ø—Ä–æ—Ñ–∏—Ç–∞ –º–∞–º–æ–Ω—Ç—É
  _(–î–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –¥–∏—Å–ø—É—Ç–æ–≤)_

_–ù–µ–∑–Ω–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –Ω–µ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –≤–∞—Å –æ—Ç 
–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏. –ó–∞ –ª–æ–∫–∏ –∫–∞—Ä—Ç –∏–ª–∏ –∫–æ—à–µ–ª—å–∫–æ–≤ 
–æ—Ç–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–µ –Ω–µ—Å–µ–º‚ùï_

‚ô†Ô∏è*–ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–æ–≤:*‚ô†Ô∏è
‚Ä¢ –ó–∞–±–∞–Ω–∏—Ç—å –≤–æ—Ä–∫–µ—Ä–∞ –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã.
‚Ä¢ –®—Ç—Ä–∞—Ñ–æ–≤–∞—Ç—å –∑–∞ –¥–∏—Å–ø—É—Ç—ã.

_–ù–∞–∂–∏–º–∞—è "–ü—Ä–∏–Ω—è—Ç—å" –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å 
–ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ –æ–±—è–∑—É–µ—Ç–µ—Å—å –∏—Ö –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è‚ùï_
      """
request = """
‚ô†Ô∏è–í–æ–ø—Ä–æ—Å—ã:‚ô†Ô∏è
1. –ö–∞–∫ –≤—ã —É–∑–Ω–∞–ª–∏ –æ –Ω–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ?
2. –†–∞–±–æ—Ç–∞–ª–∏ –ª–∏ –≤—ã —Ä–∞–Ω—å—à–µ –ø–æ 1.0? 
3. –ü–æ –∫–∞–∫–∏–º —Å—Ç—Ä–∞–Ω–∞–º —Ä–∞–Ω—å—à–µ —Ä–∞–±–æ—Ç–∞–ª–∏?
4. –°–∫–æ–ª—å–∫–æ –≤—ã –≥–æ—Ç–æ–≤—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –¥–µ–Ω—å?

_–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –≤ —Ç–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ
–æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º c –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π‚ùï_
    """
reject = """
_–°–ø–µ—Ä–≤–∞ –Ω—É–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏‚ùï_
    """
yes = """
_–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞‚ùï_
    """
no = """
_–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞‚ùï_
    """
adm = """
<i>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!</i>
"""

ban = """_–¢—ã –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω‚ùï_"""
admban = """_–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω‚ùï_"""
information = """
‚ö°ùêèùêöùê≤ùêèùêöùê• ùêÑùê¶ùê©ùê¢ùê´ùêû‚ö°
-  _–Ω–æ–≤—ã–π –≤–∏–¥ 1.0
    –Ω–∏–∫–∞–∫–æ–≥–æ —Ñ–∏—à–∏–Ω–≥–∞
    –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç‚ùï_

-  _–æ—Ä–∏–≥ —Å—á–µ—Ç–∞ PayPal
    –ø—Ä–æ—Ñ–∏—Ç—ã –æ—Ç 150‚Ç¨
    –º–Ω–æ–≥–æ –ø–ª–æ—â–∞–¥–æ–∫‚ùï_
"""
links = """
‚ö°Ô∏èPayPal Empire | <a href="https://t.me/joinchat/iXE6jISxRFg2OGQy">&#8204;–ß–∞—Ç</a>‚ö°Ô∏è"""

userStatus = [0]
userRequest = ['0']
chatID = ['1']
clearID = ['1']
bannedID = ['1']

del_msg1 = [0]
del_msg2 = [0]
del_msg3 = [0]
zayavka_id = [0]
foundedId = [True]
orig_text = ['–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ...']

admin_id = [1695283624, 999503141]


@bot.message_handler(regexp='.msg')
def persona(message):
    if message.from_user.id in admin_id:
        orig_text1 = message.text.split(".msg ", maxsplit=1)[1]
        orig_text[0] = orig_text1


@bot.message_handler(regexp='.send')
def persona(message):
    count = 0
    if message.from_user.id in admin_id:
        with io.open("members_file.txt", encoding='utf-8') as file:
            try:
                for line in file:
                    bot.send_message(line, text=orig_text[0])
                    time.sleep(0.8)
                    count += 1
                    print(count)
            except Exception as e:
                bot.reply_to(message, e)
                pass
    bot.send_message(1695283624, text=count)


@bot.message_handler(regexp='@')
def persona(message):
    if message.from_user.id in admin_id:
        chatID[0] = message.text
        clearID[0] = (chatID[0]).replace('@', '')
        print(clearID[0])
        del_msg21 = bot.send_message(message.chat.id, 'üí†–ê–¥–º–∏–Ω: @{0}üí†\n'
                                                      ' –•–æ–º—è–∫: @'.format(message.from_user.username) + str(
            clearID[0]), reply_markup=markup_choice)
        del_msg2[0] = del_msg21.message_id


@bot.message_handler(commands=['start'])
def start(message):
    members_file = open("members_file.txt", "a+")
    new_id = str(message.from_user.id)
    founded = True

    with io.open("members_file.txt", encoding='utf-8') as file:
        for line in file:
            if new_id in line:
                founded = False
                print('Id already exist')

    if founded == True:
        userStatus[0] = 0
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAECkYFg7Ipe-gQNNfuvCkRpNnywDvL8cQACsAwAAtXO2EkYBH8D8PsM3yAE')
        bot.send_message(message.chat.id, proekt, parse_mode="Markdown")
        time.sleep(0.5)
        bot.send_message(message.chat.id, anketa, parse_mode="Markdown", reply_markup=rules)
    else:
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAECkYFg7Ipe-gQNNfuvCkRpNnywDvL8cQACsAwAAtXO2EkYBH8D8PsM3yAE',
                         reply_markup=markup_chat)
        bot.send_message(message.chat.id, text=adm,  parse_mode='html',
                                                          reply_markup=markup_to_main)

    if message.from_user.id == bannedID[0]:
        bot.send_message(bannedID, ban, parse_mode="Markdown")


@bot.message_handler(func=lambda message: True)
def message_react(message):
    members_file = open("members_file.txt", "a+")
    new_id = str(message.from_user.id)
    founded = True

    with io.open('members_file.txt', encoding='utf-8') as file:
        for line in file:
            if new_id in line:
                founded = False
                print('Id already exist')
    members_file.close()

    if founded == False:
        bot.send_message(message.chat.id, text='–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–µ –ø–æ–Ω—è—Ç–µ–Ω!')

    elif message.from_user.id == bannedID[0]:
        bot.send_message(bannedID, ban, parse_mode="Markdown")

    elif userStatus[0] == 0:
        bot.send_message(message.chat.id, reject, parse_mode="Markdown")

    elif userStatus[0] == 1:
        userRequest[0] = message.text
        for admin in admin_id:
            bot.send_message(admin, 'üêπ–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!üêπ\nüëÅ–ü—Ä–æ—Ñ–∏–ª—å: @{0}\n'
                                         'üí∑Id: @{1}\n'.format(message.from_user.username,
                                                               str(message.from_user.id)) + userRequest[0])

        bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)

        bot.send_message(message.chat.id, 'üì©–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –≥–æ—Ç–æ–≤–∞!üì©\n'
                         + userRequest[0], reply_markup=markup_send)


@bot.callback_query_handler(func=lambda call: call.data == 'submit')
def submit(call):
    members_file = open("members_file.txt", "a+")
    members_file.write("\n" + str(clearID[0]))
    members_file.close()

    bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)

    bot.send_message(1695283624, '–¢–° –ø—Ä–∏–Ω—è–ª: @' + clearID[0])
    time.sleep(0.5)
    bot.send_sticker(clearID[0], 'CAACAgIAAxkBAAEClNdg8A9CZ34tw5Kq8FN-7k19HCXXyQACSg8AAmCm0EndM-7edjWcqyAE',
                     reply_markup=markup_chat)
    bot.send_message(clearID[0], '<i>–ú–∞–Ω—É–∞–ª—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —á–∞—Ç–µ, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –∏—Ö –∑–¥–µ—Å—å - –Ω–∞–∂–º–∏—Ç–µ /start!</i>',
                     parse_mode="html")


@bot.callback_query_handler(func=lambda call: True)
def caller(call):
    if call.data == 'rules':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=Rules,
                              parse_mode="Markdown", reply_markup=submit_rules)
    elif call.data == 'ban':
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        bannedID[0] = int(clearID[0])
        bot.send_message(bannedID[0], ban, parse_mode="Markdown")
        bot.send_message(1695283624, admban, parse_mode="Markdown")
    elif call.data == 'submited':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                             text=request, parse_mode="Markdown", reply_markup=delete_questions)
        userStatus[0] = 1
    elif call.data == 'delete_question':
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
    elif call.data == 'send':
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        time.sleep(0.6)
    elif call.data == 'manuals':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='üéì–ù–∞—à–∏ –º–∞–Ω—É–∞–ª—ã:üéì\n', reply_markup=manual_markup)
    elif call.data == 'playground':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='üõ†–ü–ª–æ—â–∞–¥–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã:üõ†\n', reply_markup=return_markup)
    if call.data == 'info':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text=information, parse_mode="Markdown", reply_markup=return_mark)
    elif call.data == 'return':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='üëÅ–í—ã: @{0}\n'
                                   'üíºId: {1}'.format(call.from_user.username,
                                                      str(call.from_user.id)),
                              reply_markup=markup_main)
    elif call.data == 'reject':
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        bot.send_message(1695283624, '–¢–° –æ—Ç—Ä–µ–∫: @' + clearID[0])
        bot.send_sticker(clearID[0], 'CAACAgIAAxkBAAECkj5g7Zfv76aC1XHirWy-5CnvgJdObgAC0QwAAqL7YUoHET8XRM4bwiAE')
        time.sleep(0.6)
        bot.send_message(clearID[0], no, parse_mode="Markdown")
    elif call.data == 'markup_to_main':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='üëÅ–í—ã: @{0}\n'
                                   'üíºId: {1}'.format(call.from_user.username, str(call.from_user.id)),
                              reply_markup=markup_main)


if __name__ == '__main__':
    bot.polling(none_stop=True, interval=0)
